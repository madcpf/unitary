# Copyright 2023 The Unitary Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
from unitary.examples.quantum_chinese_chess import constants
from unitary.examples.quantum_chinese_chess.move import Move
import unitary.examples.quantum_chinese_chess.enums as enums


def test_equality():
    assert Move("a1", "b4") == Move("a1", "b4")
    assert Move(
        source="g3", source2="c3", target="e4", move_type=enums.MoveType.MERGE_JUMP
    ) == Move(
        source="g3", source2="c3", target="e4", move_type=enums.MoveType.MERGE_JUMP
    )
    assert Move(
        source="g3", source2="c3", target="e4", move_type=enums.MoveType.MERGE_JUMP
    ) != Move(
        source="g3", source2="d6", target="e4", move_type=enums.MoveType.MERGE_JUMP
    )
    assert Move("a1", "b4") != Move("a1", "b5")
    assert Move("a1", "b4") != "a1b4"

    assert Move("a1", "b4", measurement=1) == Move("a1", "b4", measurement=1)
    assert Move("a1", "b4", measurement=1) != Move("a1", "b4", measurement=0)
    assert Move("a1", "b4", measurement=1) != Move("a1", "b4")

    assert Move("a1", "b4", move_type=enums.MoveType.JUMP) == Move(
        "a1", "b4", move_type=enums.MoveType.JUMP
    )
    assert Move("a1", "b4", move_type=enums.MoveType.JUMP) != Move(
        "a1", "b4", move_type=enums.MoveType.SLIDE
    )

    assert Move("e2", "e1", promotion_piece=-constants.QUEEN) == Move(
        "e2", "e1", promotion_piece=-constants.QUEEN
    )
    assert Move("e2", "e1", promotion_piece=-constants.QUEEN) != Move(
        "e2", "e1", promotion_piece=-constants.KNIGHT
    )
